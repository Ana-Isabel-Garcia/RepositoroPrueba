import java.io.IOException;
import java.time.Duration;
import java.io.File;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import org.openqa.selenium.*;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import AccesoDatos.ReadFile;
import AccesoDatos.WriteFile;

public class ModificarTrabajadores {
	private WebDriver driver;
	private WriteFile write;
	private ReadFile read;
	String ruta = "C:\\xampp\\htdocs\\colegio\\PruebasColegio\\DataFlows\\Administrativo\\Modificar_Trabajadores.xlsx";
	Boolean exito = false;
	
	//locators
	private By cajaNombre = By.id("caja_nombre");
	private By cajaPaterno = By.id("caja_ap_paterno");
	private By cajaMaterno = By.id("caja_ap_materno");
	private By cajaRFC = By.id("caja_rfc");
	private By cajaCorreo = By.id("caja_correo");
	private By cajaTelefono = By.id("caja_telefono");
	private By botonActualizar = By.id("boton_actualizar");
	private By botonCancelar = By.id("boton_cancelar");
	
	

	@Before
	public void setUp() throws Exception {
		System.setProperty("webdriver.msedgedriver.driver", "./src/test/resources/chromedriver/msedgedriver.exe ");
		driver = new EdgeDriver();
		driver.manage().window().maximize();
		driver.get("http://localhost/colegio/Proyect-Master/view/login/Login.html");

		read = new ReadFile();
		write = new WriteFile();
		
		driver.findElement(By.id("usuario")).sendKeys("admin@gmail.com");
		driver.findElement(By.id("password")).sendKeys("Leo1234@");
		driver.findElement(By.xpath("//div[@class='boton']/input")).click();
	}

	@After
	public void tearDown() throws Exception {
		driver.quit();
	}

	@Test
	public void test() throws IOException {
		//acceder al modulo
		WebDriverWait waitMenu = new WebDriverWait(driver, Duration.ofSeconds(10));
		waitMenu.until(ExpectedConditions.titleContains("Menú"));

		System.out.println("Si entra a admin");

		for (int i = 1; i <= read.getFilas(ruta, "Hoja1"); i++) {
			//entrar al módulo de modificar
			driver.findElement(By.partialLinkText("TRABAJADORES")).click();
			WebDriverWait waitLista = new WebDriverWait(driver, Duration.ofSeconds(10));
			waitLista.until(
					ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath("//a[@id='menuSucursal1']"))));
			driver.findElement(By.xpath("//a[@id='menuSucursal2']")).click();

			WebDriverWait waitReg = new WebDriverWait(driver, Duration.ofSeconds(10));
			waitReg.until(ExpectedConditions.titleContains("Visualización"));
			System.out.println("Si entra mostrar");
			
			driver.findElement(By.partialLinkText("Modificar")).click();
			waitReg.until(ExpectedConditions.titleContains("Modificación"));
			System.out.println("Si entra modificar");
			
			//toma una captura para obtener los valores actuales
			tomarCaptura(i, "Antes");
			
			//obtiene los valores actuales
			write.writeCellValue(ruta, "Hoja1", i, 0, driver.findElement(cajaNombre).getAttribute("value"));
			write.writeCellValue(ruta, "Hoja1", i, 3, driver.findElement(cajaPaterno).getAttribute("value"));
			write.writeCellValue(ruta, "Hoja1", i, 6, driver.findElement(cajaMaterno).getAttribute("value"));
			write.writeCellValue(ruta, "Hoja1", i, 9, driver.findElement(cajaCorreo).getAttribute("value"));
			write.writeCellValue(ruta, "Hoja1", i, 12, driver.findElement(cajaTelefono).getAttribute("value"));
			
			//limpia los campos
			driver.findElement(cajaNombre).clear();
			driver.findElement(cajaPaterno).clear();
			driver.findElement(cajaMaterno).clear();
			driver.findElement(cajaCorreo).clear();
			driver.findElement(cajaTelefono).clear();
			
			//escribir los valores actuales
			int columnas = read.getColumnas(ruta, "Hoja1", i);
			String[] datos = new String[6];
			int iterador = 0;
			
			// ciclo de obtención de datos
			for (int j = 1; j <= columnas; j+=3) {
				System.out.println("j: " + j);
				datos[iterador] = read.getCellValue(ruta, "Hoja1", i, j);
				iterador += 1;
			}
			
			//llenar las cajas con los valores nuevos
			driver.findElement(cajaNombre).sendKeys(datos[0]);
			System.out.println("nombre: " + datos[0]);
			driver.findElement(cajaPaterno).sendKeys(datos[1]);
			System.out.println("paterno: " + datos[0]);
			driver.findElement(cajaMaterno).sendKeys(datos[2]);
			driver.findElement(cajaCorreo).sendKeys(datos[4]);
			driver.findElement(cajaTelefono).sendKeys(datos[5]);
			
			//intenta hacer el registro y si no aparece la alerta cancela todo
			try {
				
				driver.findElement(botonActualizar).click();
				WebDriverWait waitAlert = new WebDriverWait(driver, Duration.ofSeconds(5));
				waitAlert.until(ExpectedConditions.alertIsPresent());
				cerrarAlerta(i);
				
				exito = true;
			}

			catch (TimeoutException e) {
				exito = false;
				driver.findElement(botonCancelar).click();
				
				WebDriverWait waitAlert = new WebDriverWait(driver, Duration.ofSeconds(5));
				waitAlert.until(ExpectedConditions.alertIsPresent());
				cerrarAlerta(i);
			}
			
			//esperar a que se salga del módulo
			waitReg.until(ExpectedConditions.titleContains("Visualización"));
			System.out.println("Si entra mostrar");
			
			//entrar al módulo de modificar
			driver.findElement(By.partialLinkText("Modificar")).click();
			waitReg.until(ExpectedConditions.titleContains("Modificación"));
			System.out.println("Si entra modificar");
			
			if(exito == true) {
				//si se hizo la actualización
				tomarCaptura(i, "Después");
				
				//registra los valores despues de la operación
				write.writeCellValue(ruta, "Hoja1", i, 2, driver.findElement(cajaNombre).getAttribute("value"));
				write.writeCellValue(ruta, "Hoja1", i, 5, driver.findElement(cajaPaterno).getAttribute("value"));
				write.writeCellValue(ruta, "Hoja1", i, 8, driver.findElement(cajaMaterno).getAttribute("value"));
				write.writeCellValue(ruta, "Hoja1", i, 11, driver.findElement(cajaCorreo).getAttribute("value"));
				write.writeCellValue(ruta, "Hoja1", i, 14, driver.findElement(cajaTelefono).getAttribute("value"));
				
			}
			
			else {
				//no se hizo la actualización
				write.writeCellValue(ruta, "Hoja1", i, 2, "No actualizado");
				write.writeCellValue(ruta, "Hoja1", i, 5, "No actualizado");
				write.writeCellValue(ruta, "Hoja1", i, 8, "No actualizado");
				write.writeCellValue(ruta, "Hoja1", i, 11, "No actualizado");
				write.writeCellValue(ruta, "Hoja1", i, 14, "No actualizado");
				
			}
			
		}

	}
	
	public void tomarCaptura(int i, String status) throws IOException {
		File f = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		com.google.common.io.Files.copy(f,
				new File("C:\\xampp\\htdocs\\colegio\\PruebasColegio\\Capturas\\Trabajadores\\Modificar\\captura "
						+ String.valueOf(i) + " - " + status +".png"));

	}
	
	public void cerrarAlerta(int fila) throws IOException {
		Alert alerta = driver.switchTo().alert();
		System.out.println("Alerta: " + alerta.getText());
		alerta.accept();
	}

}
