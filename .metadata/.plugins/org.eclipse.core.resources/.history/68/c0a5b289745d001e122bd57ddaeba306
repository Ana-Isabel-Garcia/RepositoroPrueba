//import static org.junit.Assert.*;

import java.io.IOException;
import java.time.Duration;
import java.io.File;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import org.openqa.selenium.*;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import AccesoDatos.ReadFile;
import AccesoDatos.WriteFile;

public class RegistroTrabajadores {
	private WebDriver driver;
	private WriteFile write;
	private ReadFile read;
	String ruta = "C:\\xampp\\htdocs\\colegio\\PruebasColegio\\DataFlows\\Administrativo\\Registro_Trabajadores.xlsx";

	// locators
	private By cajaNombre = By.id("caja_nombre");
	private By cajaPaterno = By.id("caja_ap_paterno");
	private By cajaMaterno = By.id("caja_ap_materno");
	private By cajaRFC = By.id("caja_rfc");
	private By cajaCorreo = By.id("caja_correo");
	private By cajaTelefono = By.id("caja_telefono");
	private By cajaContra = By.id("caja_contra");
	private By cajaConfirm = By.id("caja_contra_verificar");
	

	@Before
	public void setUp() throws Exception {
		System.setProperty("webdriver.msedgedriver.driver", "./src/test/resources/chromedriver/msedgedriver.exe ");
		driver = new EdgeDriver();
		driver.manage().window().maximize();
		driver.get("http://localhost/colegio/Proyect-Master/view/login/Login.html");

		read = new ReadFile();
		write = new WriteFile();

		driver.findElement(By.id("usuario")).sendKeys("admin@gmail.com");
		driver.findElement(By.id("password")).sendKeys("Leo1234@");
		driver.findElement(By.xpath("//div[@class='boton']/input")).click();

	}

	@After
	public void tearDown() throws Exception {
		System.out.println("Prueba terminada");
		driver.quit();

	}

	@Test
	public void test() throws IOException, InterruptedException {

		// acceder al modulo

		WebDriverWait waitMenu = new WebDriverWait(driver, Duration.ofSeconds(10));
		waitMenu.until(ExpectedConditions.titleContains("Menú"));

		System.out.println("Si entra a admin");

		driver.findElement(By.partialLinkText("TRABAJADORES")).click();
		WebDriverWait waitLista = new WebDriverWait(driver, Duration.ofSeconds(10));
		waitLista.until(
				ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath("//a[@id='menuSucursal1']"))));
		driver.findElement(By.xpath("//a[@id='menuSucursal1']")).click();

		WebDriverWait waitReg = new WebDriverWait(driver, Duration.ofSeconds(10));
		waitReg.until(ExpectedConditions.titleContains("Registro"));
		System.out.println("Si entra alregistro");

		System.out.println("comienza la parte de registro de datos");

		for (int i = 1; i <= read.getFilas(ruta, "Hoja1"); i++) {

			// limpiar todos los campos
			driver.findElement(cajaNombre).clear();
			driver.findElement(cajaPaterno).clear();
			driver.findElement(cajaMaterno).clear();
			driver.findElement(cajaRFC).clear();
			driver.findElement(cajaCorreo).clear();
			driver.findElement(cajaTelefono).clear();
			driver.findElement(cajaContra).clear();
			driver.findElement(cajaConfirm).clear();

			// obtener el numero de columnas del flujo
			int columnas = read.getColumnas(ruta, "Hoja1", i);
			String[] datos = new String[columnas];

			// ciclo de obtención de datos
			for (int j = 0; j <= 7; j++) {
				datos[j] = read.getCellValue(ruta, "Hoja1", i, j);
			}

			//llenar las cajas de texto
			driver.findElement(cajaNombre).sendKeys(datos[0]);
			driver.findElement(cajaPaterno).sendKeys(datos[1]);
			driver.findElement(cajaMaterno).sendKeys(datos[2]);
			driver.findElement(cajaRFC).sendKeys(datos[3]);
			driver.findElement(cajaCorreo).sendKeys(datos[4]);
			driver.findElement(cajaTelefono).sendKeys(datos[5]);
			driver.findElement(cajaContra).sendKeys(datos[6]);
			driver.findElement(cajaConfirm).sendKeys(datos[7]);

			try {
				tomarCaptura(i + 1);
				driver.findElement(By.id("boton_registro")).click();
				WebDriverWait waitAlert = new WebDriverWait(driver, Duration.ofSeconds(5));
				waitAlert.until(ExpectedConditions.alertIsPresent());
				cerrarAlerta(i);
			}

			catch (TimeoutException e) {
				write.writeCellValue(ruta, "Hoja1", i, 8, "No hay alerta");
				System.out.println("Registro fallido");
			}

		}

	}

	public void cerrarAlerta(int fila) throws IOException {
		Alert alerta = driver.switchTo().alert();
		System.out.println("Alerta: " + alerta.getText());
		write.writeCellValue(ruta, "Hoja1", fila, 8, alerta.getText());
		alerta.accept();
	}

	public void tomarCaptura(int i) throws IOException {
		File f = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		com.google.common.io.Files.copy(f,
				new File("C:\\xampp\\htdocs\\colegio\\PruebasColegio\\Capturas\\Trabajadores\\Registro\\captura "
						+ String.valueOf(i) + ".png"));

	}

}
